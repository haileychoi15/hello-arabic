{"version":3,"sources":["myFirebase.js","routes/Auth.js","Context.js","components/ResultDetail.js","components/Result.js","services/API.js","routes/Home.js","components/ListDetail.js","routes/List.js","components/NavItem.js","components/Navigation.js","routes/Translate.js","routes/User.js","components/Router.js","components/GlobalStyles.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","AuthContainer","styled","div","AccountButton","button","Form","form","InputContainer","Input","input","PasswordButton","SubmitButton","MessageBlock","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","message","setMessage","passwordType","setPasswordType","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","onClick","prev","type","placeholder","required","Boolean","length","className","UserContext","createContext","Li","li","MainResultBlock","Dl","dl","Dt","dt","Dd","dd","AddButton","SubResultBlock","ArabicBlock","span","ResultDetail","result","collectionPath","open","setOpen","add","setAdd","dataId","setDataId","userObj","useContext","decodeHtml","html","element","document","createElement","innerHTML","saveResult","date","Date","collection","creator","uid","vocForm","solution","niceGloss","posNice","root","id","deleteResult","doc","delete","Result","results","map","index","key","getWordResult","word","lang","langs","http","axios","create","baseURL","proxyUrl","get","data","googleTranslate","text","sourceLang","targetLang","headers","translation","borderStyles","css","prop","position","HomeContainer","Ul","ul","ResetButton","Placeholder","PlaceholderText","ResultContainer","Home","active","langList","setLangList","inputValue","setInputValue","setLang","setResults","hasVal","item","i","onLangClick","action","maxLength","menu","DeleteButton","ListDetail","dateString","toDate","day","toLocaleDateString","replaceAll","toLocaleTimeString","split","hours","minutes","console","log","onDeleteClick","sourceValue","targetValue","ListContainer","Message","List","menuList","setMenuList","setMenu","words","setWords","translations","setTranslations","empty","setEmpty","useEffect","getDataList","category","orderBy","onSnapshot","snapshot","docs","wordList","onMenuClick","filter","transaction","ItemContainer","NavItem","size","Provider","Nav","nav","Navigation","title","list","setList","querySelectorAll","forEach","app","classList","contains","remove","LangContainer","SelectBlock","Select","select","SwitchButton","TextareaBlock","Textarea","textarea","AddButtonBlock","Translate","setSourceLang","setTargetLang","onLangChange","tempLang","rows","readOnly","UserContainer","LogoutButton","User","setUserObj","signOut","AppContainer","AppBlock","NavContainer","AppRouter","login","GlobalStyles","createGlobalStyle","BodyContainer","Container","Loading","App","init","setInit","onAuthStateChanged","user","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0cd8dd58.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\n","import React, {useState} from 'react';\nimport { firebaseInstance, authService } from 'myFirebase';\nimport styled from 'styled-components';\nimport {ImEyeBlocked, ImEye} from 'react-icons/im';\n\nconst AuthContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 2rem;\n  color: #eee;\n  background-color: #202020;\n`;\n\nconst AccountButton = styled.button`\n  position: absolute;\n  top: 2rem;\n  right: 2rem;\n  color: #ffed97;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  transform: translateY(-15%);\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 40px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 100%;\n  border: 1px solid #848484;\n  border-radius: 8px;\n  padding: 0 1rem;\n  color: #eee;\n  &:focus {\n    border: 1px solid #ffed97;\n  }\n`;\n\nconst PasswordButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transform: translateY(-50%);\n  font-size: 1rem;\n  color: #eee;\n`;\n\nconst SubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  border: 1px solid #ffed97;\n  border-radius: 20px;\n  margin-bottom: 1rem;\n  color: #333;\n  background-color: #ffed97;\n  &.google {\n    color: #ffed97;\n    background: none;\n  }\n`;\n\nconst MessageBlock = styled.div`\n  width: 100%;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n`;\n\nfunction Auth() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(false);\n    const [message, setMessage] = useState('');\n    const [passwordType, setPasswordType] = useState(true);\n\n    const onChange = (e) => {\n        setMessage('');\n        const {name, value} = e.target;\n        if (name === 'email') setEmail(value);\n        else if (name === 'password') setPassword(value);\n    }\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (newAccount) {\n                await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setMessage(error.message);\n        }\n    }\n\n    const toggleAccount = () => {\n        setNewAccount(prev => !prev);\n        setEmail('');\n        setPassword('');\n        setPasswordType(true);\n        setMessage('');\n    };\n\n    const onSocialClick = async () => {\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        await authService.signInWithPopup(provider);\n        //console.log(data.additionalUserInfo.profile.email);\n    }\n\n\n    return (\n        <AuthContainer>\n            <AccountButton onClick={toggleAccount}>\n                {newAccount ? '로그인' : '계정 등록'}\n            </AccountButton>\n            <Form onSubmit={onSubmit}>\n                <InputContainer>\n                    <Input name=\"email\"\n                           type=\"text\"\n                           placeholder=\"이메일\"\n                           value={email}\n                           onChange={onChange}\n                           required\n                    />\n                </InputContainer>\n                <InputContainer>\n                    <Input name=\"password\"\n                           type={passwordType ? 'password' : 'text'}\n                           placeholder=\"비밀번호\"\n                           value={password}\n                           onChange={onChange}\n                           required\n                    />\n                    {Boolean(password.length) &&\n                        <PasswordButton type=\"button\" onClick={() => setPasswordType(prev => !prev)}>\n                            {passwordType ? <ImEyeBlocked /> : <ImEye />}\n                        </PasswordButton>\n                    }\n                </InputContainer>\n                {Boolean(message.length) &&\n                <MessageBlock>\n                    {message}\n                </MessageBlock>\n                }\n                <SubmitButton type=\"submit\">\n                    {newAccount ? \"계정 등록\" : \"로그인\"}\n                </SubmitButton>\n                {!newAccount &&\n                <SubmitButton onClick={onSocialClick} className=\"google\">Google 계정으로 로그인</SubmitButton>\n                }\n            </Form>\n        </AuthContainer>\n    );\n}\n\nexport default Auth;","import {createContext} from 'react';\n\nexport const UserContext = createContext([]);","import React, {useContext, useState} from 'react';\nimport {dbService} from \"myFirebase\";\nimport styled from 'styled-components';\nimport {MdBookmarkBorder, MdBookmark} from 'react-icons/md';\nimport {UserContext} from 'Context';\n\nconst Li = styled.li`\n  border: 1px solid #404040;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  margin-bottom: 0.8rem;\n  background-color: #303030;\n`;\n\nconst MainResultBlock = styled.div`\n  position: relative;\n  color: #eee;\n`;\n\nconst Dl = styled.dl`\n  width: 100%;\n`;\n\nconst Dt = styled.dt`\n  //font-family: 'Tajawal', sans-serif;\n  display: inline-block;\n  margin-right: 0.5rem;\n  font-size: 1.1rem;\n`;\n\nconst Dd = styled.dd`\n  display: inline-block;\n  font-size: 0.8rem;\n`;\n\nconst AddButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  color: #ffed97;\n`;\n\nconst SubResultBlock = styled.div`\n  width: 100%;\n  font-size: 0.6rem;\n  line-height: 1.2rem;\n  color: #a8a8a8;\n`;\n\nconst ArabicBlock = styled.span`\n  font-size: 0.7rem;\n`;\n\nfunction ResultDetail ({ result, collectionPath }) {\n    const [open, setOpen] = useState(false);\n    const [add, setAdd] = useState(false);\n    const [dataId, setDataId] = useState('');\n    const userObj = useContext(UserContext)[0];\n\n    const decodeHtml = (html) => {\n        const element = document.createElement('textarea');\n        element.innerHTML = html;\n        return element.value;\n    }\n\n    const saveResult = async () => {\n        const date = new Date();\n        const {id} = await dbService.collection(collectionPath).add({\n            creator: userObj.uid,\n            vocForm: result.solution.vocForm,\n            niceGloss: result.solution.niceGloss,\n            posNice: result.solution.posNice,\n            root: result.solution.root,\n            date\n        });\n        if (id) setDataId(id);\n    }\n\n    const deleteResult = async () => {\n        await dbService.doc(`${collectionPath}/${dataId}`).delete();\n    }\n\n    const onAddClick = () => {\n        add ? deleteResult() : saveResult();\n        setAdd(prev => !prev);\n    }\n    return (\n        <Li>\n            <MainResultBlock>\n                <Dl open={open} onClick={() => setOpen(prev => !prev)}>\n                    <Dt>{decodeHtml(result.solution.vocForm)}</Dt>\n                    <Dd>{result.solution.niceGloss}</Dd>\n                </Dl>\n                <AddButton onClick={onAddClick}>\n                    {add ? <MdBookmark /> : <MdBookmarkBorder />}\n                </AddButton>\n            </MainResultBlock>\n            <div>\n                <SubResultBlock>\n                    <span>{result.solution.posNice}</span>\n                    <span>, Root <ArabicBlock>{decodeHtml(result.solution.root)}</ArabicBlock></span>\n                </SubResultBlock>\n            </div>\n        </Li>\n    );\n}\nexport default ResultDetail;","import React from 'react';\nimport ResultDetail from 'components/ResultDetail';\n\nfunction Result( { results, collectionPath }) {\n    return (\n        <div>\n            {results.map((result, index) => (\n                <ul key={index}>\n                    <ResultDetail result={result}  collectionPath={collectionPath} />\n                </ul>\n            ))}\n        </div>\n    );\n}\n\nexport default Result;","import React from 'react';\nimport axios from \"axios\";\n\nexport const getWordResult = async (word, lang) => {\n    const langs = lang ? 'AR-EN' : 'EN-AR';\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n    const targetUrl = process.env.REACT_APP_ARATOOLS_URL;\n    const query = process.env.REACT_APP_ARATOOLS_QUERY;\n    const http = axios.create({\n        baseURL: proxyUrl + targetUrl\n    });\n    const { data : { result } } = await http.get(`${query}{\"word\": \"${word}\", \"dictionary\": \"${langs}-WORD-DICTIONARY\"}&format=json`);\n    return result;\n}\n\nexport const googleTranslate = async (text, sourceLang, targetLang) => {\n    const appKey = process.env.REACT_APP_GOOGLE_TRANSLATE_APP_KEY;\n    const http = axios.create({\n        baseURL: 'https://google-translate20.p.rapidapi.com',\n        headers : {\n            'x-rapidapi-host': 'google-translate20.p.rapidapi.com',\n            'x-rapidapi-key': appKey\n        }\n    });\n    const {data : { data : { translation } }} = await http.get(`/translate?text=${text}&sl=${sourceLang}&tl=${targetLang}`);\n    return translation;\n}","import React, {useState} from 'react';\nimport Result from 'components/Result';\nimport {getWordResult} from \"services/API\";\nimport styled, {css} from 'styled-components';\nimport {AiOutlineCloseCircle, AiOutlineSearch} from 'react-icons/ai';\n\nconst borderStyles = css`\n    ${prop => (prop.position === 'right')\n    ? css`\n      border-top-right-radius: 20px;\n      border-bottom-right-radius: 20px;`\n    : css`\n      border-top-left-radius: 20px;\n      border-bottom-left-radius: 20px;\n    `}\n`;\n\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Ul = styled.ul`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem 0 2rem;\n`;\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100px;\n    height: 40px;\n    border: 1px solid #ffed97;\n    & button {\n      color: #ffed97;\n    }\n    background-color: rgba(0, 0, 0, 0);\n    &.active {\n      & button {\n         color: #333;\n      }\n      background-color: #ffed97;\n    }\n    ${borderStyles}\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n`;\n\nconst InputContainer = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 45px;\n    border: 1px solid #848484;\n    border-radius: 22px;\n    padding: 0.3rem 0.7rem;\n    margin-bottom: 1rem;\n`;\n\nconst Input = styled.input`\n  flex-basis: 90%;\n  height: 100%;\n  font-size: 1.1rem;\n  color: #d2d2d2;\n  caret-color: #848484;\n`;\n\nconst ResetButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0.7rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #848484;\n  font-size: 1.2rem;\n  transform: translateY(-50%);\n`;\n\nconst Placeholder = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 0.7rem;\n  display: flex;\n  align-items: center;\n  font-size: 1.1rem;\n  color: #848484;\n  transform: translateY(-50%);\n`;\n\nconst PlaceholderText = styled.span`\n  margin-left: 0.3rem;\n  font-size: 0.8rem;\n  font-weight: 400;\n`;\n\nconst SearchButton = styled.button`\n  width: 100%;\n  height: 40px;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ffed97;\n  border-radius: 20px;\n  color: #ffed97;\n`;\n\nconst ResultContainer = styled.div`\n   width: 100%;\n   flex-grow: 1;\n   overflow-y: scroll;\n   -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst MessageBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8rem;\n`;\n\nfunction Home({ collectionPath }) {\n    const initialLangList = [\n        {\n            text : '아랍어',\n            position: 'left',\n            active: true,\n        },\n        {\n            text : '영어',\n            position: 'right',\n            active: false,\n        }\n    ]\n    const [langList, setLangList] = useState(initialLangList);\n    const [inputValue, setInputValue] = useState('');\n    const [lang, setLang] = useState(true); // arabic\n    const [results, setResults] = useState(null);\n    const [message, setMessage] = useState('');\n\n    const onChange = (e) => {\n        const { value } = e.target;\n        setInputValue(value);\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        setResults(null);\n\n        const hasVal = inputValue.length;\n        setMessage( hasVal ? '결과를 가져오는 중...' : '단어를 입력해주세요.');\n        if (!hasVal) return false;\n\n        const test1 = 'زَهْرَة';\n        const test2 = 'تمشى';\n        const result = await getWordResult(inputValue, lang);\n        result.length ? setResults(result) : setMessage('검색결과가 없습니다.');\n    }\n\n    const onLangClick = (index) => {\n        (index === 0) ? setLang(true) : setLang(false);\n        setLangList(langList.map((item, i) => (index === i)\n        ? {...item, active: true}\n        : {...item, active: false}));\n    }\n\n    return (\n        <HomeContainer>\n            <Ul>\n                {langList.map((item, index) =>\n                    <Li key={index} onClick={() => onLangClick(index)} className={item.active? 'active' : ''} position={item.position}>\n                        <button type=\"button\">{item.text}</button>\n                    </Li>\n                )}\n            </Ul>\n            <Form action=\"\" onSubmit={onSubmit}>\n                <InputContainer>\n                    <Input\n                        type=\"text\"\n                        lang=\"ar\"\n                        maxLength={30}\n                        value={inputValue}\n                        onChange={onChange} />\n                    {Boolean(inputValue.length)\n                        ? <ResetButton type=\"button\" onClick={() => setInputValue('')}>\n                            <AiOutlineCloseCircle />\n                          </ResetButton>\n                        : <Placeholder>\n                            <AiOutlineSearch />\n                            <PlaceholderText>검색</PlaceholderText>\n                          </Placeholder>\n                    }\n                </InputContainer>\n                {/*<SearchButton type=\"submit\">\n                    검색\n                </SearchButton>*/}\n            </Form>\n            <ResultContainer>\n                <div>\n                   {results ? <Result results={results} collectionPath={collectionPath} />\n                       : <MessageBlock>{message}</MessageBlock>\n                   }\n                </div>\n            </ResultContainer>\n        </HomeContainer>\n    );\n}\n\nexport default Home;","import React, {useState} from 'react';\nimport {dbService} from 'myFirebase';\nimport {MdDeleteForever} from 'react-icons/md';\nimport styled, {css} from 'styled-components';\n\nconst Li = styled.li`\n  border: 1px solid #404040;\n  border-radius: 0.5rem;\n  padding: 0.5rem;\n  margin-bottom: 0.8rem;\n  background-color: #303030;\n`;\n\nconst MainResultBlock = styled.div`\n  position: relative;\n  color: #eee;\n`;\n\nconst Dl = styled.dl`\n  width: 100%;\n  padding-right: 1.2rem;\n`;\n\nconst Dt = styled.dt`\n  //font-family: 'Tajawal', sans-serif;\n  display: inline-block;\n  margin-right: 0.5rem;\n  font-size: 0.9rem;\n  ${prop => prop.menu && css`\n     font-size: 1.1rem;\n  `}\n`;\n\nconst Dd = styled.dd`\n  display: inline-block;\n  font-size: 0.8rem;\n  &.open {\n    display: block;\n    line-height: 1.2rem;\n    color: #bbb;\n  }\n  &.ar {\n    margin-top: 0.3rem;\n  }\n`;\n\nconst ArabicBlock = styled.span`\n  font-size: 0.9rem;\n  margin-left: 0.4rem;\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  color: #ffed97;\n`;\n\nconst SubResultBlock = styled.div`\n  width: 100%;\n  margin-top: 0.5rem;\n  font-size: 0.6rem;\n  text-align: right;\n  color: #a8a8a8;\n`;\n\nfunction ListDetail({ menu, item }) {\n\n    const dateString = item.date.toDate();\n    const day = dateString.toLocaleDateString().replaceAll('.', '').replaceAll(' ', '.');\n    const [hours, minutes] = dateString.toLocaleTimeString().split(':');\n    const date = `${day} ${hours}:${minutes}`;\n    console.log(date);\n    const [open, setOpen] = useState(false);\n    const decodeHtml = (html) => {\n        const element = document.createElement('textarea');\n        element.innerHTML = html;\n        return element.value;\n    }\n    const onDeleteClick = async () => {\n        const collectionPath = menu ? 'words' : 'translations';\n        await dbService.doc(`${collectionPath}/${item.id}`).delete();\n    }\n    return (\n        <Li>\n            <MainResultBlock>\n                <Dl open={open} onClick={() => setOpen(prev => !prev)}>\n                    {menu\n                        ? <>\n                            <Dt menu={menu}>{decodeHtml(item.vocForm)}</Dt>\n                            <Dd>{item.niceGloss}</Dd>\n                            {open &&\n                                <>\n                                    <Dd className=\"open\">{item.posNice}</Dd>\n                                    <Dd className=\"open\">Root\n                                        <ArabicBlock>{decodeHtml(item.root)}</ArabicBlock>\n                                    </Dd>\n                                </>\n                            }\n                          </>\n                        : <>\n                            {item.sourceLang === 'ar'\n                                ? <Dt menu={menu}>{decodeHtml(item.sourceValue)}</Dt>\n                                : <Dt menu={menu}>{item.sourceValue}</Dt>\n                            }\n                            {open &&\n                                <>\n                                {item.targetLang === 'ar'\n                                        ? <Dd className=\"open ar\">{decodeHtml(item.targetValue)}</Dd>\n                                        : <Dd className=\"open\">{item.targetValue}</Dd>\n                                }\n                                </>\n                            }\n                          </>\n                    }\n                </Dl>\n                <DeleteButton onClick={onDeleteClick}>\n                    <MdDeleteForever />\n                </DeleteButton>\n            </MainResultBlock>\n            <SubResultBlock>{date}</SubResultBlock>\n        </Li>\n    );\n}\n\nexport default ListDetail;","import React, {useContext, useEffect, useState} from 'react';\nimport ListDetail from 'components/ListDetail';\nimport {UserContext} from 'Context';\nimport {dbService} from 'myFirebase';\nimport styled, {css} from 'styled-components';\n\nconst borderStyles = css`\n    ${prop => (prop.position === 'right')\n    ? css`\n      border-top-right-radius: 20px;\n      border-bottom-right-radius: 20px;`\n    : css`\n      border-top-left-radius: 20px;\n      border-bottom-left-radius: 20px;\n    `}\n`;\n\nconst ListContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    width: 100%;\n    height: 100%; \n    background-color: #202020;\n`;\n\nconst Ul = styled.ul`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 1rem 0 2rem;\n`;\n\nconst Li = styled.li`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100px;\n    height: 40px;\n    border: 1px solid #ffed97;\n    & button {\n      color: #ffed97;\n    }\n    background-color: rgba(0, 0, 0, 0);\n    &.active {\n      & button {\n         color: #333;\n      }\n      background-color: #ffed97;\n    }\n    ${borderStyles}\n`;\n\nconst ResultContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Message = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  min-width: 200px;\n  font-size: 0.8rem;\n  color: #eee;\n  transform: translate(-50%, -50%);\n`;\n\nfunction List() {\n    const initialMenuList = [\n        {\n            text : '단어',\n            position: 'left',\n            active: true,\n        },\n        {\n            text : '번역',\n            position: 'right',\n            active: false,\n        }\n    ]\n    const [menuList, setMenuList] = useState(initialMenuList);\n    const [menu, setMenu] = useState(true);\n    const userObj = useContext(UserContext)[0];\n    const [words, setWords] = useState([]);\n    const [translations, setTranslations] = useState([]);\n    const [empty, setEmpty] = useState(false);\n\n    useEffect(() => {\n        getDataList('words');\n    },[]);\n\n    const getDataList = (category) => {\n        dbService.collection(category).orderBy('date', 'desc').onSnapshot(snapshot => {\n            const results = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            (results.length) ? setEmpty(false) : setEmpty(true);\n            (category === 'words') ? setWords(results) : setTranslations(results);\n        });\n    }\n\n    const onMenuClick = (index) => {\n        const wordList = (index === 0);\n        getDataList(wordList ? 'words' : 'translations');\n        wordList ? setMenu(true) : setMenu(false);\n        setMenuList(menuList.map((item, i) => (index === i)\n            ? {...item, active: true}\n            : {...item, active: false}));\n    }\n\n    return (\n        <ListContainer empty={empty}>\n            <Ul>\n                {menuList.map((item, index) =>\n                    <Li key={index} onClick={() => onMenuClick(index)} className={item.active? 'active' : ''} position={item.position}>\n                        <button type=\"button\">{item.text}</button>\n                    </Li>\n                )}\n            </Ul>\n            <ResultContainer>\n                {empty\n                    ? <Message>아직 북마크를 이용하지 않으셨어요.</Message>\n                    : <>\n                        {menu\n                            ? <ul>\n                                {words\n                                    .filter(word => word.creator === userObj.uid)\n                                    .map(word => <ListDetail\n                                        key={word.id}\n                                        menu={menu}\n                                        item={word}\n                                    /> )}\n                              </ul>\n                            : <ul>\n                                {translations\n                                    .filter(transaction => transaction.creator === userObj.uid)\n                                    .map(transaction => <ListDetail\n                                        key={transaction.id}\n                                        menu={menu}\n                                        item={transaction}\n                                    /> )}\n                              </ul>}\n                      </>\n                }\n            </ResultContainer>\n        </ListContainer>\n    );\n}\n\nexport default List;","import React from 'react';\nimport styled from 'styled-components';\nimport {IconContext} from 'react-icons';\nimport {MdSearch, MdGTranslate, MdBookmark, MdPerson} from 'react-icons/md';\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #848484;\n`;\n\nfunction NavItem({ id, size }) {\n    return (\n        <ItemContainer>\n                <IconContext.Provider value={{size}}>\n                    {id === 1 && <MdSearch />}\n                    {id === 2 && <MdGTranslate />}\n                    {id === 3 && <MdBookmark />}\n                    {id === 4 && <MdPerson />}\n                </IconContext.Provider>\n        </ItemContainer>\n    );\n}\n\nexport default NavItem;","import React, {useState} from 'react';\nimport NavItem from 'components/NavItem';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding: 0.5em;\n  margin: 0 auto;\n  border: 1px solid #404040;\n  border-radius: 32px;\n  background-color: #303030;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Li = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &.active div {\n    color: #ffed97;\n  }\n`;\n\nconst Navigation = () => {\n    const data = [{\n        id: 1,\n        title: 'home',\n        active: true,\n        size: '1.7rem'\n    },\n    {\n        id: 2,\n        title: 'translate',\n        active: false,\n        size: '1.7rem',\n    },\n    {\n        id: 3,\n        title: 'list',\n        active: false,\n        size: '1.7rem',\n    },\n    {\n        id: 4,\n        title: 'user',\n        active: false,\n        size: '2rem',\n    }];\n    const [list, setList] = useState(data);\n\n    const onNavClick = (id, title) => {\n\n        // 리팩토링 필요...\n        const apps = document.querySelectorAll('.app');\n        apps.forEach(app => {\n            app.classList.contains(title) ?  app.classList.add('show') :  app.classList.remove('show');\n        });\n\n        setList(list.map((item, index) =>  (id === item.id)\n            ? {...item, active: true}\n            : {...item, active: false}));\n    }\n\n    return (\n        <div>\n            <Nav>\n                <Ul>\n                    {list.map((item) => (\n                        <Li key={item.id} onClick={() => onNavClick(item.id, item.title)} className={item.active ? 'active' : ''}>\n                            <NavItem id={item.id} size={item.size} />\n                        </Li>\n                    ))}\n                </Ul>\n            </Nav>\n        </div>\n    )\n}\n\nexport default Navigation;","import React, {useContext, useState} from 'react';\nimport styled from 'styled-components';\nimport {dbService} from 'myFirebase';\nimport {googleTranslate} from 'services/API';\nimport {MdSwapHoriz} from 'react-icons/md'\nimport {MdBookmarkBorder, MdBookmark} from 'react-icons/md';\nimport {UserContext} from 'Context';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst LangContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 1rem 0 2rem;\n`;\n\n\nconst SelectBlock = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 40px;\n  border: 1px solid #ffed97;\n  border-radius: 20px;\n  background: none;\n`;\n\nconst Select = styled.select`\n  width: 60px;\n  border: none;\n  color: #ffed97;\n  background: none;\n`;\n\nconst SwitchButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 1rem;\n  font-size: 1.5rem;\n  color: #ffed97;\n`;\n\nconst TextareaBlock = styled.div`\n  width: 100%;\n  border: 1px solid #404040;\n  border-radius: 8px;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  color: #333;\n  background-color: #ffed97;\n  &.result-textarea {\n    background-color: #303030;\n  }\n  &.result-textarea textarea {\n    color: #eee;\n  }\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 100%;\n  border: none;\n  padding: 0;\n  font-size: 1.1rem;\n  background: none;\n  resize: none;\n`;\n\nconst SearchButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  border-radius: 20px;\n  margin-bottom: 1rem;\n  color: #333;\n  background: #ffed97;\n`;\n\nconst AddButtonBlock = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 0.8rem;\n  color: #eee;\n`;\n\nconst AddButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 35px;\n  height: 35px;\n  border: 1px solid #ffed97;\n  border-radius: 50%;\n  font-size: 1.2rem;\n  color: #ffed97;\n`;\n\nconst Message = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nfunction Translate({ collectionPath }) {\n    const userObj = useContext(UserContext)[0];\n    const [inputValue, setInputValue] = useState('');\n    const [results, setResults] = useState('');\n    const [add, setAdd] = useState(false);\n    const [dataId, setDataId] = useState('');\n    const [sourceLang, setSourceLang] = useState('ar');\n    const [targetLang, setTargetLang] = useState('en');\n    const [message, setMessage] = useState('');\n\n    const onInputChange = (e) => {\n        const { value } = e.target;\n        setInputValue(value);\n        setMessage('');\n    }\n\n    const onLangSwitch = () => {\n        const tempLang = sourceLang;\n        setSourceLang(targetLang);\n        setTargetLang(tempLang);\n    }\n\n    const onLangChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'source-langs') {\n            setSourceLang(value);\n        }\n        else if (name === 'target-langs') {\n            setTargetLang(value);\n        }\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        setAdd(false);\n        setResults('');\n        const result = await googleTranslate(inputValue, sourceLang, targetLang);\n        setResults(result);\n    }\n\n    const saveResult = async () => {\n        const date = new Date();\n        const { id } = await dbService.collection(collectionPath).add({\n            creator: userObj.uid,\n            sourceLang,\n            targetLang,\n            sourceValue: inputValue,\n            targetValue: results,\n            date\n        });\n        setDataId(id);\n    }\n\n    const deleteResult = async () => {\n        await dbService.doc(`${collectionPath}/${dataId}`).delete();\n    }\n\n    const onAddClick = () => {\n\n        if (!inputValue.length) {\n            setMessage('번역할 문장을 입력하세요.');\n            return false;\n        }\n        else if (!results.length) {\n            setMessage('번역 결과가 없습니다.');\n            return false;\n        }\n\n        add ? deleteResult() : saveResult();\n        setAdd(prev => !prev);\n    }\n    return (\n        <div>\n            <Form action=\"\" onSubmit={onSubmit}>\n                <LangContainer>\n                    <SelectBlock>\n                        <Select name=\"source-langs\" value={sourceLang} onChange={onLangChange}>\n                            <option value=\"ar\">아랍어</option>\n                            <option value=\"en\">영어</option>\n                            <option value=\"ko\">한국어</option>\n                        </Select>\n                    </SelectBlock>\n                    <SwitchButton onClick={onLangSwitch}>\n                        <MdSwapHoriz />\n                    </SwitchButton>\n                    <SelectBlock>\n                        <Select name=\"target-langs\" value={targetLang} onChange={onLangChange}>\n                            <option value=\"ar\">아랍어</option>\n                            <option value=\"en\">영어</option>\n                            <option value=\"ko\">한국어</option>\n                        </Select>\n                    </SelectBlock>\n                </LangContainer>\n                <TextareaBlock>\n                    <Textarea id=\"source-context\" rows=\"8\" placeholder=\"내용을 입력해주세요.\" value={inputValue} onChange={onInputChange} />\n                </TextareaBlock>\n                {/*<SearchButton type=\"submit\">번역하기</SearchButton>*/}\n                <TextareaBlock className=\"result-textarea\" >\n                    <Textarea id=\"target-context\" rows=\"8\" placeholder=\"번역 결과입니다.\" value={results} readOnly />\n                </TextareaBlock>\n            </Form>\n            <AddButtonBlock>\n                <Message>{message}</Message>\n                <AddButton type=\"button\" onClick={onAddClick}>\n                    {add ? <MdBookmark /> : <MdBookmarkBorder />}\n                </AddButton>\n            </AddButtonBlock>\n        </div>\n    );\n}\n\nexport default Translate;","import React, {useContext} from 'react';\nimport {UserContext} from 'Context';\nimport {authService} from 'myFirebase';\nimport styled from 'styled-components';\n\nconst UserContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst LogoutButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  font-size: 0.8rem;\n  color: #ffed97;\n`;\n\nfunction User() {\n    const setUserObj = useContext(UserContext)[1];\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        setUserObj(null);\n    }\n    return (\n        <UserContainer>\n            <LogoutButton onClick={onLogOutClick}>로그아웃</LogoutButton>\n        </UserContainer>\n    );\n}\n\nexport default User;","import React from 'react';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport List from 'routes/List';\nimport Navigation from 'components/Navigation';\nimport Translate from 'routes/Translate';\nimport User from 'routes/User';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  width: 100%;\n  height: 88%;\n  padding: 1rem;\n  background-color: #202020;\n`;\n\nconst AppBlock = styled.div`\n  display: none;\n  width: 100%;\n  height: 100%;\n  &.show {\n    display: block;\n  }\n`;\n\nconst NavContainer = styled.div`\n  width: 100%;\n  height: 12%;\n  padding: 0 1rem;\n  background-color: #202020;\n  @media screen and (min-width: 375px) {\n    padding: 1rem;\n  }\n`;\n\nfunction AppRouter ({ login }) {\n    return(\n        <>\n        {login\n            ? <>\n                <AppContainer>\n                    <AppBlock className=\"app home show\">\n                        <Home collectionPath=\"words\" />\n                    </AppBlock>\n                    <AppBlock className=\"app translate\">\n                        <Translate collectionPath=\"translate\" />\n                    </AppBlock>\n                    <AppBlock className=\"app list\">\n                        <List />\n                    </AppBlock>\n                    <AppBlock className=\"app user\">\n                        <User />\n                    </AppBlock>\n                </AppContainer>\n                <NavContainer>\n                    <Navigation />\n                </NavContainer>\n              </>\n            : <Auth />}\n        </>\n    )\n}\n\nexport default AppRouter;","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n\nbody {\n    font-family: 'Nanum Gothic', sans-serif; \n    color: #fff;\n    background-color: #202020;\n    padding: 0;\n    margin: 0;\n  }\n  \n  body * {\n    box-sizing: border-box;\n    &::selection {\n      background-color: rgba(79,192,141,0.5);\n    }\n  }\n  \n  ul, ol, li {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n  \n  dl, dt, dd {\n    margin: 0;\n    padding: 0;\n  }\n  \n  a {\n    text-decoration: none;\n    color: #fff;\n  }\n  \n  button, input, textarea, select, option {\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    outline: none;\n    background: none;\n  }\n`;\n\nexport default GlobalStyles;","import React, {useEffect, useState} from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'myFirebase';\nimport { UserContext } from 'Context';\nimport GlobalStyles from 'components/GlobalStyles';\nimport styled from 'styled-components';\n\nconst BodyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: #efefef;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  max-width: 375px;\n  max-height: 667px;\n  background-color: #fff;\n`;\n\nconst Loading = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj(user);\n            }\n            setInit(true);\n        });\n    }, []);\n    return (\n        <BodyContainer>\n            <Container>\n                <GlobalStyles />\n                <UserContext.Provider value={[userObj, setUserObj]}>\n                    {init ? <AppRouter login={Boolean(userObj)} />\n                          : <Loading>로딩중 ...</Loading>\n                    }\n                </UserContext.Provider>\n            </Container>\n        </BodyContainer>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}